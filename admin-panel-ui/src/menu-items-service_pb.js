// source: menu-items-service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.telegramMenuSystem.AddCategoryRequest', null, global);
goog.exportSymbol('proto.telegramMenuSystem.AddDishRequest', null, global);
goog.exportSymbol('proto.telegramMenuSystem.Categories', null, global);
goog.exportSymbol('proto.telegramMenuSystem.Category', null, global);
goog.exportSymbol('proto.telegramMenuSystem.CategoryDetails', null, global);
goog.exportSymbol('proto.telegramMenuSystem.ChangeCategoryDetailsRequest', null, global);
goog.exportSymbol('proto.telegramMenuSystem.Dish', null, global);
goog.exportSymbol('proto.telegramMenuSystem.Empty', null, global);
goog.exportSymbol('proto.telegramMenuSystem.FetchCategoryDetailsRequest', null, global);
goog.exportSymbol('proto.telegramMenuSystem.GetDishRequest', null, global);
goog.exportSymbol('proto.telegramMenuSystem.RemoveCategoryRequest', null, global);
goog.exportSymbol('proto.telegramMenuSystem.RemoveDishRequest', null, global);
goog.exportSymbol('proto.telegramMenuSystem.UpdateDishDetailsRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.AddCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.AddCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.AddCategoryRequest.displayName = 'proto.telegramMenuSystem.AddCategoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.ChangeCategoryDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.ChangeCategoryDetailsRequest.displayName = 'proto.telegramMenuSystem.ChangeCategoryDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.RemoveCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.RemoveCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.RemoveCategoryRequest.displayName = 'proto.telegramMenuSystem.RemoveCategoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.FetchCategoryDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.FetchCategoryDetailsRequest.displayName = 'proto.telegramMenuSystem.FetchCategoryDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.AddDishRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.AddDishRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.AddDishRequest.displayName = 'proto.telegramMenuSystem.AddDishRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.UpdateDishDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.UpdateDishDetailsRequest.displayName = 'proto.telegramMenuSystem.UpdateDishDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.RemoveDishRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.RemoveDishRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.RemoveDishRequest.displayName = 'proto.telegramMenuSystem.RemoveDishRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.Dish = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.Dish, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.Dish.displayName = 'proto.telegramMenuSystem.Dish';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.GetDishRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.GetDishRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.GetDishRequest.displayName = 'proto.telegramMenuSystem.GetDishRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.CategoryDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.telegramMenuSystem.CategoryDetails.repeatedFields_, null);
};
goog.inherits(proto.telegramMenuSystem.CategoryDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.CategoryDetails.displayName = 'proto.telegramMenuSystem.CategoryDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.Category.displayName = 'proto.telegramMenuSystem.Category';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.Categories = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.telegramMenuSystem.Categories.repeatedFields_, null);
};
goog.inherits(proto.telegramMenuSystem.Categories, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.Categories.displayName = 'proto.telegramMenuSystem.Categories';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.telegramMenuSystem.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.telegramMenuSystem.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.telegramMenuSystem.Empty.displayName = 'proto.telegramMenuSystem.Empty';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.AddCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.AddCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.AddCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.AddCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentcategoryid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.AddCategoryRequest}
 */
proto.telegramMenuSystem.AddCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.AddCategoryRequest;
  return proto.telegramMenuSystem.AddCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.AddCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.AddCategoryRequest}
 */
proto.telegramMenuSystem.AddCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentcategoryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.AddCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.AddCategoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.AddCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.AddCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentcategoryid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string categoryId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.AddCategoryRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.AddCategoryRequest} returns this
 */
proto.telegramMenuSystem.AddCategoryRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parentCategoryId = 2;
 * @return {string}
 */
proto.telegramMenuSystem.AddCategoryRequest.prototype.getParentcategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.AddCategoryRequest} returns this
 */
proto.telegramMenuSystem.AddCategoryRequest.prototype.setParentcategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.telegramMenuSystem.AddCategoryRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.AddCategoryRequest} returns this
 */
proto.telegramMenuSystem.AddCategoryRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.ChangeCategoryDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.ChangeCategoryDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentcategoryid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.ChangeCategoryDetailsRequest}
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.ChangeCategoryDetailsRequest;
  return proto.telegramMenuSystem.ChangeCategoryDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.ChangeCategoryDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.ChangeCategoryDetailsRequest}
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentcategoryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.ChangeCategoryDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.ChangeCategoryDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentcategoryid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string categoryId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.ChangeCategoryDetailsRequest} returns this
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parentCategoryId = 2;
 * @return {string}
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.prototype.getParentcategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.ChangeCategoryDetailsRequest} returns this
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.prototype.setParentcategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.ChangeCategoryDetailsRequest} returns this
 */
proto.telegramMenuSystem.ChangeCategoryDetailsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.RemoveCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.RemoveCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.RemoveCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.RemoveCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.RemoveCategoryRequest}
 */
proto.telegramMenuSystem.RemoveCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.RemoveCategoryRequest;
  return proto.telegramMenuSystem.RemoveCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.RemoveCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.RemoveCategoryRequest}
 */
proto.telegramMenuSystem.RemoveCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.RemoveCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.RemoveCategoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.RemoveCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.RemoveCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string categoryId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.RemoveCategoryRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.RemoveCategoryRequest} returns this
 */
proto.telegramMenuSystem.RemoveCategoryRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.FetchCategoryDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.FetchCategoryDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.FetchCategoryDetailsRequest}
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.FetchCategoryDetailsRequest;
  return proto.telegramMenuSystem.FetchCategoryDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.FetchCategoryDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.FetchCategoryDetailsRequest}
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.FetchCategoryDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.FetchCategoryDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string categoryId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.FetchCategoryDetailsRequest} returns this
 */
proto.telegramMenuSystem.FetchCategoryDetailsRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.AddDishRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.AddDishRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.AddDishRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.AddDishRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dishid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categoryid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    availability: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    imagebase64: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.AddDishRequest}
 */
proto.telegramMenuSystem.AddDishRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.AddDishRequest;
  return proto.telegramMenuSystem.AddDishRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.AddDishRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.AddDishRequest}
 */
proto.telegramMenuSystem.AddDishRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDishid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailability(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagebase64(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.AddDishRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.AddDishRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.AddDishRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.AddDishRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDishid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAvailability();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getImagebase64();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string dishId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.AddDishRequest.prototype.getDishid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.AddDishRequest} returns this
 */
proto.telegramMenuSystem.AddDishRequest.prototype.setDishid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string categoryId = 2;
 * @return {string}
 */
proto.telegramMenuSystem.AddDishRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.AddDishRequest} returns this
 */
proto.telegramMenuSystem.AddDishRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.telegramMenuSystem.AddDishRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.AddDishRequest} returns this
 */
proto.telegramMenuSystem.AddDishRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.telegramMenuSystem.AddDishRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.AddDishRequest} returns this
 */
proto.telegramMenuSystem.AddDishRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool availability = 5;
 * @return {boolean}
 */
proto.telegramMenuSystem.AddDishRequest.prototype.getAvailability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.telegramMenuSystem.AddDishRequest} returns this
 */
proto.telegramMenuSystem.AddDishRequest.prototype.setAvailability = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string imageBase64 = 6;
 * @return {string}
 */
proto.telegramMenuSystem.AddDishRequest.prototype.getImagebase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.AddDishRequest} returns this
 */
proto.telegramMenuSystem.AddDishRequest.prototype.setImagebase64 = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.UpdateDishDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.UpdateDishDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dishid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categoryid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    availability: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    imagebase64: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.UpdateDishDetailsRequest}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.UpdateDishDetailsRequest;
  return proto.telegramMenuSystem.UpdateDishDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.UpdateDishDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.UpdateDishDetailsRequest}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDishid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailability(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagebase64(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.UpdateDishDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.UpdateDishDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDishid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAvailability();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getImagebase64();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string dishId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.getDishid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.UpdateDishDetailsRequest} returns this
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.setDishid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string categoryId = 2;
 * @return {string}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.UpdateDishDetailsRequest} returns this
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.UpdateDishDetailsRequest} returns this
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.UpdateDishDetailsRequest} returns this
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool availability = 5;
 * @return {boolean}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.getAvailability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.telegramMenuSystem.UpdateDishDetailsRequest} returns this
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.setAvailability = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string imageBase64 = 6;
 * @return {string}
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.getImagebase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.UpdateDishDetailsRequest} returns this
 */
proto.telegramMenuSystem.UpdateDishDetailsRequest.prototype.setImagebase64 = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.RemoveDishRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.RemoveDishRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.RemoveDishRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.RemoveDishRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dishid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.RemoveDishRequest}
 */
proto.telegramMenuSystem.RemoveDishRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.RemoveDishRequest;
  return proto.telegramMenuSystem.RemoveDishRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.RemoveDishRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.RemoveDishRequest}
 */
proto.telegramMenuSystem.RemoveDishRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDishid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.RemoveDishRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.RemoveDishRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.RemoveDishRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.RemoveDishRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDishid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dishId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.RemoveDishRequest.prototype.getDishid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.RemoveDishRequest} returns this
 */
proto.telegramMenuSystem.RemoveDishRequest.prototype.setDishid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.Dish.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.Dish.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.Dish} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.Dish.toObject = function(includeInstance, msg) {
  var f, obj = {
    dishid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categoryid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    availability: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    imageuri: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.Dish}
 */
proto.telegramMenuSystem.Dish.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.Dish;
  return proto.telegramMenuSystem.Dish.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.Dish} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.Dish}
 */
proto.telegramMenuSystem.Dish.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDishid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailability(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageuri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.Dish.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.Dish.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.Dish} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.Dish.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDishid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAvailability();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getImageuri();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string dishId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.Dish.prototype.getDishid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.Dish} returns this
 */
proto.telegramMenuSystem.Dish.prototype.setDishid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string categoryId = 2;
 * @return {string}
 */
proto.telegramMenuSystem.Dish.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.Dish} returns this
 */
proto.telegramMenuSystem.Dish.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.telegramMenuSystem.Dish.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.Dish} returns this
 */
proto.telegramMenuSystem.Dish.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.telegramMenuSystem.Dish.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.Dish} returns this
 */
proto.telegramMenuSystem.Dish.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool availability = 5;
 * @return {boolean}
 */
proto.telegramMenuSystem.Dish.prototype.getAvailability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.telegramMenuSystem.Dish} returns this
 */
proto.telegramMenuSystem.Dish.prototype.setAvailability = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string imageURI = 6;
 * @return {string}
 */
proto.telegramMenuSystem.Dish.prototype.getImageuri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.Dish} returns this
 */
proto.telegramMenuSystem.Dish.prototype.setImageuri = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.GetDishRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.GetDishRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.GetDishRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.GetDishRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dishid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.GetDishRequest}
 */
proto.telegramMenuSystem.GetDishRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.GetDishRequest;
  return proto.telegramMenuSystem.GetDishRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.GetDishRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.GetDishRequest}
 */
proto.telegramMenuSystem.GetDishRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDishid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.GetDishRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.GetDishRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.GetDishRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.GetDishRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDishid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dishId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.GetDishRequest.prototype.getDishid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.GetDishRequest} returns this
 */
proto.telegramMenuSystem.GetDishRequest.prototype.setDishid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.telegramMenuSystem.CategoryDetails.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.CategoryDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.CategoryDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.CategoryDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentcategoryid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    childcategoryList: jspb.Message.toObjectList(msg.getChildcategoryList(),
    proto.telegramMenuSystem.Category.toObject, includeInstance),
    dishList: jspb.Message.toObjectList(msg.getDishList(),
    proto.telegramMenuSystem.Dish.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.CategoryDetails}
 */
proto.telegramMenuSystem.CategoryDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.CategoryDetails;
  return proto.telegramMenuSystem.CategoryDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.CategoryDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.CategoryDetails}
 */
proto.telegramMenuSystem.CategoryDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentcategoryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.telegramMenuSystem.Category;
      reader.readMessage(value,proto.telegramMenuSystem.Category.deserializeBinaryFromReader);
      msg.addChildcategory(value);
      break;
    case 5:
      var value = new proto.telegramMenuSystem.Dish;
      reader.readMessage(value,proto.telegramMenuSystem.Dish.deserializeBinaryFromReader);
      msg.addDish(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.CategoryDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.CategoryDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.CategoryDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentcategoryid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChildcategoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.telegramMenuSystem.Category.serializeBinaryToWriter
    );
  }
  f = message.getDishList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.telegramMenuSystem.Dish.serializeBinaryToWriter
    );
  }
};


/**
 * optional string categoryId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.CategoryDetails} returns this
 */
proto.telegramMenuSystem.CategoryDetails.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parentCategoryId = 2;
 * @return {string}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.getParentcategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.CategoryDetails} returns this
 */
proto.telegramMenuSystem.CategoryDetails.prototype.setParentcategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.CategoryDetails} returns this
 */
proto.telegramMenuSystem.CategoryDetails.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Category childCategory = 4;
 * @return {!Array<!proto.telegramMenuSystem.Category>}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.getChildcategoryList = function() {
  return /** @type{!Array<!proto.telegramMenuSystem.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.telegramMenuSystem.Category, 4));
};


/**
 * @param {!Array<!proto.telegramMenuSystem.Category>} value
 * @return {!proto.telegramMenuSystem.CategoryDetails} returns this
*/
proto.telegramMenuSystem.CategoryDetails.prototype.setChildcategoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.telegramMenuSystem.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.telegramMenuSystem.Category}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.addChildcategory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.telegramMenuSystem.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.telegramMenuSystem.CategoryDetails} returns this
 */
proto.telegramMenuSystem.CategoryDetails.prototype.clearChildcategoryList = function() {
  return this.setChildcategoryList([]);
};


/**
 * repeated Dish dish = 5;
 * @return {!Array<!proto.telegramMenuSystem.Dish>}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.getDishList = function() {
  return /** @type{!Array<!proto.telegramMenuSystem.Dish>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.telegramMenuSystem.Dish, 5));
};


/**
 * @param {!Array<!proto.telegramMenuSystem.Dish>} value
 * @return {!proto.telegramMenuSystem.CategoryDetails} returns this
*/
proto.telegramMenuSystem.CategoryDetails.prototype.setDishList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.telegramMenuSystem.Dish=} opt_value
 * @param {number=} opt_index
 * @return {!proto.telegramMenuSystem.Dish}
 */
proto.telegramMenuSystem.CategoryDetails.prototype.addDish = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.telegramMenuSystem.Dish, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.telegramMenuSystem.CategoryDetails} returns this
 */
proto.telegramMenuSystem.CategoryDetails.prototype.clearDishList = function() {
  return this.setDishList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.Category.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.Category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.Category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.Category.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.Category}
 */
proto.telegramMenuSystem.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.Category;
  return proto.telegramMenuSystem.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.Category}
 */
proto.telegramMenuSystem.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string categoryId = 1;
 * @return {string}
 */
proto.telegramMenuSystem.Category.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.Category} returns this
 */
proto.telegramMenuSystem.Category.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.telegramMenuSystem.Category.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.telegramMenuSystem.Category} returns this
 */
proto.telegramMenuSystem.Category.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.telegramMenuSystem.Categories.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.Categories.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.Categories.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.Categories} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.Categories.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryList: jspb.Message.toObjectList(msg.getCategoryList(),
    proto.telegramMenuSystem.Category.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.Categories}
 */
proto.telegramMenuSystem.Categories.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.Categories;
  return proto.telegramMenuSystem.Categories.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.Categories} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.Categories}
 */
proto.telegramMenuSystem.Categories.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.telegramMenuSystem.Category;
      reader.readMessage(value,proto.telegramMenuSystem.Category.deserializeBinaryFromReader);
      msg.addCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.Categories.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.Categories.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.Categories} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.Categories.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.telegramMenuSystem.Category.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Category category = 1;
 * @return {!Array<!proto.telegramMenuSystem.Category>}
 */
proto.telegramMenuSystem.Categories.prototype.getCategoryList = function() {
  return /** @type{!Array<!proto.telegramMenuSystem.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.telegramMenuSystem.Category, 1));
};


/**
 * @param {!Array<!proto.telegramMenuSystem.Category>} value
 * @return {!proto.telegramMenuSystem.Categories} returns this
*/
proto.telegramMenuSystem.Categories.prototype.setCategoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.telegramMenuSystem.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.telegramMenuSystem.Category}
 */
proto.telegramMenuSystem.Categories.prototype.addCategory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.telegramMenuSystem.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.telegramMenuSystem.Categories} returns this
 */
proto.telegramMenuSystem.Categories.prototype.clearCategoryList = function() {
  return this.setCategoryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.telegramMenuSystem.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.telegramMenuSystem.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.telegramMenuSystem.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.telegramMenuSystem.Empty}
 */
proto.telegramMenuSystem.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.telegramMenuSystem.Empty;
  return proto.telegramMenuSystem.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.telegramMenuSystem.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.telegramMenuSystem.Empty}
 */
proto.telegramMenuSystem.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.telegramMenuSystem.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.telegramMenuSystem.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.telegramMenuSystem.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.telegramMenuSystem.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.telegramMenuSystem);
